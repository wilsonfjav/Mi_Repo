// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MovimientoEstudiantil.Data;

#nullable disable

namespace MovimientoEstudiantil.Migrations
{
    [DbContext(typeof(MovimientoEstudiantilContext))]
    partial class MovimientoEstudiantilContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MovimientoEstudiantil.Models.Estudiante", b =>
                {
                    b.Property<int>("idEstudiante")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_estudiante");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idEstudiante"));

                    b.Property<int?>("ProvinciaidProvincia")
                        .HasColumnType("int");

                    b.Property<int>("anioIngreso")
                        .HasColumnType("int")
                        .HasColumnName("anioIngreso");

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("correo");

                    b.Property<int>("provinciaId")
                        .HasColumnType("int")
                        .HasColumnName("provincia_id");

                    b.Property<string>("satisfaccionCarrera")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("satisfaccion_carrera");

                    b.Property<int>("sedeId")
                        .HasColumnType("int")
                        .HasColumnName("sede_id");

                    b.HasKey("idEstudiante");

                    b.HasIndex("ProvinciaidProvincia");

                    b.HasIndex("provinciaId");

                    b.HasIndex("sedeId");

                    b.ToTable("Estudiante");

                    b.HasData(
                        new
                        {
                            idEstudiante = 1,
                            anioIngreso = 2023,
                            correo = "gustavo@ucr.ac.cr",
                            provinciaId = 1,
                            satisfaccionCarrera = "Si",
                            sedeId = 1
                        });
                });

            modelBuilder.Entity("MovimientoEstudiantil.Models.Provincia", b =>
                {
                    b.Property<int>("idProvincia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_provincia");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idProvincia"));

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombre");

                    b.HasKey("idProvincia");

                    b.ToTable("Provincia");

                    b.HasData(
                        new
                        {
                            idProvincia = 1,
                            nombre = "San José"
                        });
                });

            modelBuilder.Entity("MovimientoEstudiantil.Models.Sede", b =>
                {
                    b.Property<int>("idSede")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_sede");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idSede"));

                    b.Property<int>("idProvincia")
                        .HasColumnType("int")
                        .HasColumnName("provincia_id");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombre");

                    b.HasKey("idSede");

                    b.HasIndex("idProvincia");

                    b.ToTable("Sede");

                    b.HasData(
                        new
                        {
                            idSede = 1,
                            idProvincia = 1,
                            nombre = "Ciudad Universitaria Rodrigo Facio"
                        });
                });

            modelBuilder.Entity("MovimientoEstudiantil.Models.Usuario", b =>
                {
                    b.Property<int>("idUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_usuario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idUsuario"));

                    b.Property<int>("SedeidSede")
                        .HasColumnType("int");

                    b.Property<string>("contrasena")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("contrasena");

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("correo");

                    b.Property<DateTime>("fechaRegistro")
                        .HasColumnType("date")
                        .HasColumnName("fecha_registro");

                    b.Property<string>("rol")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("rol");

                    b.Property<int>("sede")
                        .HasColumnType("int")
                        .HasColumnName("sede_id");

                    b.HasKey("idUsuario");

                    b.HasIndex("SedeidSede");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("MovimientoEstudiantil.Models.Estudiante", b =>
                {
                    b.HasOne("MovimientoEstudiantil.Models.Provincia", null)
                        .WithMany("Estudiantes")
                        .HasForeignKey("ProvinciaidProvincia");

                    b.HasOne("MovimientoEstudiantil.Models.Provincia", "Provincia")
                        .WithMany()
                        .HasForeignKey("provinciaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MovimientoEstudiantil.Models.Sede", "Sede")
                        .WithMany("Estudiantes")
                        .HasForeignKey("sedeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Provincia");

                    b.Navigation("Sede");
                });

            modelBuilder.Entity("MovimientoEstudiantil.Models.Sede", b =>
                {
                    b.HasOne("MovimientoEstudiantil.Models.Provincia", "Provincia")
                        .WithMany("Sedes")
                        .HasForeignKey("idProvincia")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Provincia");
                });

            modelBuilder.Entity("MovimientoEstudiantil.Models.Usuario", b =>
                {
                    b.HasOne("MovimientoEstudiantil.Models.Sede", "Sede")
                        .WithMany("Usuarios")
                        .HasForeignKey("SedeidSede")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sede");
                });

            modelBuilder.Entity("MovimientoEstudiantil.Models.Provincia", b =>
                {
                    b.Navigation("Estudiantes");

                    b.Navigation("Sedes");
                });

            modelBuilder.Entity("MovimientoEstudiantil.Models.Sede", b =>
                {
                    b.Navigation("Estudiantes");

                    b.Navigation("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
